# Docker Compose for SchoolPlatform Production
# ============================================

version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: schoolplatform_prod
      POSTGRES_USER: schoolplatform
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    restart: unless-stopped
    networks:
      - schoolplatform_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - schoolplatform_network

  # Django Application
  web:
    build: .
    command: gunicorn schoolplatform.wsgi:application --bind 0.0.0.0:8000 --workers 3
    volumes:
      - ./:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=schoolplatform.settings_production
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - schoolplatform_network

  # Celery Worker
  celery:
    build: .
    command: celery -A schoolplatform worker --loglevel=info
    volumes:
      - ./:/app
      - ./logs:/app/logs
    environment:
      - DJANGO_SETTINGS_MODULE=schoolplatform.settings_production
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - schoolplatform_network

  # Celery Beat (Scheduler)
  celery-beat:
    build: .
    command: celery -A schoolplatform beat --loglevel=info
    volumes:
      - ./:/app
      - ./logs:/app/logs
    environment:
      - DJANGO_SETTINGS_MODULE=schoolplatform.settings_production
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - schoolplatform_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./ssl:/etc/nginx/ssl  # For SSL certificates
    depends_on:
      - web
    restart: unless-stopped
    networks:
      - schoolplatform_network

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  schoolplatform_network:
    driver: bridge

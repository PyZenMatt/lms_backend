# Generated by Django 4.2.11 on 2025-07-11 09:38

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('courses', '0006_teacherchoicepreference_teacherdiscountdecision'),
        ('rewards', '0002_alter_blockchaintransaction_transaction_type_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='TeacherPayoutSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('period_type', models.CharField(choices=[('weekly', 'Weekly'), ('monthly', 'Monthly')], max_length=10)),
                ('total_eur_earned', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('total_teo_earned', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('total_discounts_absorbed', models.IntegerField(default=0)),
                ('total_transactions', models.IntegerField(default=0)),
                ('eur_from_standard_sales', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('eur_from_absorbed_discounts', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('teo_from_absorbed_discounts', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'rewards_teacher_payout_summary',
                'ordering': ['-period_start'],
                'unique_together': {('teacher', 'period_start', 'period_end', 'period_type')},
            },
        ),
        migrations.CreateModel(
            name='TeacherDiscountAbsorption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_price_eur', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_percentage', models.IntegerField()),
                ('teo_used_by_student', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_amount_eur', models.DecimalField(decimal_places=2, max_digits=10)),
                ('teacher_tier', models.IntegerField(default=0)),
                ('teacher_commission_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('option_a_teacher_eur', models.DecimalField(decimal_places=2, max_digits=10)),
                ('option_a_platform_eur', models.DecimalField(decimal_places=2, max_digits=10)),
                ('option_b_teacher_eur', models.DecimalField(decimal_places=2, max_digits=10)),
                ('option_b_teacher_teo', models.DecimalField(decimal_places=2, max_digits=10)),
                ('option_b_platform_eur', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending Decision'), ('absorbed', 'TEO Absorbed'), ('refused', 'EUR Preferred'), ('expired', 'Expired (Auto-EUR)')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('decided_at', models.DateTimeField(blank=True, null=True)),
                ('final_teacher_eur', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('final_teacher_teo', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('final_platform_eur', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_absorptions', to=settings.AUTH_USER_MODEL)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discount_absorptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'rewards_teacher_discount_absorption',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['teacher', 'status'], name='rewards_tea_teacher_aa807e_idx'), models.Index(fields=['status', 'expires_at'], name='rewards_tea_status_d610dc_idx'), models.Index(fields=['created_at'], name='rewards_tea_created_daa01a_idx')],
            },
        ),
    ]

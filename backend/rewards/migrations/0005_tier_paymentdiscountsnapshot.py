# Generated by Django 5.2.5 on 2025-08-26 08:42

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("courses", "0006_teacherchoicepreference_teacherdiscountdecision"),
        ("rewards", "0004_delete_teocoinescrow"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Tier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                (
                    "min_stake_teo",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "teacher_split_percent",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("50.00"), max_digits=5
                    ),
                ),
                (
                    "platform_split_percent",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("50.00"), max_digits=5
                    ),
                ),
                (
                    "max_accept_discount_ratio",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("1.00"), max_digits=4
                    ),
                ),
                (
                    "teo_bonus_multiplier",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("1.25"), max_digits=6
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "rewards_tier",
                "ordering": ["-min_stake_teo"],
            },
        ),
        migrations.CreateModel(
            name="PaymentDiscountSnapshot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order_id", models.CharField(db_index=True, max_length=120)),
                ("price_eur", models.DecimalField(decimal_places=2, max_digits=10)),
                ("discount_percent", models.IntegerField()),
                (
                    "student_pay_eur",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("teacher_eur", models.DecimalField(decimal_places=2, max_digits=10)),
                ("platform_eur", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "teacher_teo",
                    models.DecimalField(
                        decimal_places=8, default=Decimal("0"), max_digits=18
                    ),
                ),
                (
                    "platform_teo",
                    models.DecimalField(
                        decimal_places=8, default=Decimal("0"), max_digits=18
                    ),
                ),
                ("absorption_policy", models.CharField(default="none", max_length=32)),
                (
                    "teacher_accepted_teo",
                    models.DecimalField(
                        decimal_places=8, default=Decimal("0"), max_digits=18
                    ),
                ),
                ("tier_name", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "tier_teacher_split_percent",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "tier_platform_split_percent",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "tier_max_accept_discount_ratio",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=4, null=True
                    ),
                ),
                (
                    "tier_teo_bonus_multiplier",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "course",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="courses.course",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="payment_snapshots",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="teacher_payment_snapshots",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "rewards_payment_discount_snapshot",
                "ordering": ["-created_at"],
            },
        ),
    ]

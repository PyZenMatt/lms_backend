{
    "openapi": "3.0.3",
    "info": {
        "title": "",
        "version": "0.0.0"
    },
    "paths": {
        "/api/discounts/{decision_id}/accept/": {
            "post": {
                "operationId": "discounts_accept_create",
                "description": "Accept a teacher discount decision and credit TEO to teacher.\n\nThis uses the existing teacher_make_decision atomic helper to perform\nDB balance updates and snapshot write. Additionally, create a\nBlockchainTransaction row so the frontend wallet transactions list\nshows the accepted amount immediately, and remove the related\n'teocoin_discount_pending' Notification so the inbox clears.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "decision_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "discounts"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/discounts/{decision_id}/decline/": {
            "post": {
                "operationId": "discounts_decline_create",
                "description": "Decline choice: close snapshot and mark decision as declined (idempotent).\n\nUses teacher_make_decision with accept=False to centralize logic.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "decision_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "discounts"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/discounts/pending/": {
            "get": {
                "operationId": "discounts_pending_retrieve",
                "description": "Return list of pending PaymentDiscountSnapshot entries for the authenticated teacher.\nEach snapshot includes offered_teacher_teo / offered_platform_teo (strings 8 d.p.) when possible.\nOrdered by expires_at if available, otherwise created_at ascending.",
                "tags": [
                    "discounts"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/schema/": {
            "get": {
                "operationId": "schema_retrieve",
                "description": "OpenApi3 schema for this API. Format can be selected via content negotiation.\n\n- YAML: application/vnd.oai.openapi\n- JSON: application/vnd.oai.openapi+json",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "json",
                                "yaml"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "lang",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "af",
                                "ar",
                                "ar-dz",
                                "ast",
                                "az",
                                "be",
                                "bg",
                                "bn",
                                "br",
                                "bs",
                                "ca",
                                "ckb",
                                "cs",
                                "cy",
                                "da",
                                "de",
                                "dsb",
                                "el",
                                "en",
                                "en-au",
                                "en-gb",
                                "eo",
                                "es",
                                "es-ar",
                                "es-co",
                                "es-mx",
                                "es-ni",
                                "es-ve",
                                "et",
                                "eu",
                                "fa",
                                "fi",
                                "fr",
                                "fy",
                                "ga",
                                "gd",
                                "gl",
                                "he",
                                "hi",
                                "hr",
                                "hsb",
                                "hu",
                                "hy",
                                "ia",
                                "id",
                                "ig",
                                "io",
                                "is",
                                "it",
                                "ja",
                                "ka",
                                "kab",
                                "kk",
                                "km",
                                "kn",
                                "ko",
                                "ky",
                                "lb",
                                "lt",
                                "lv",
                                "mk",
                                "ml",
                                "mn",
                                "mr",
                                "ms",
                                "my",
                                "nb",
                                "ne",
                                "nl",
                                "nn",
                                "os",
                                "pa",
                                "pl",
                                "pt",
                                "pt-br",
                                "ro",
                                "ru",
                                "sk",
                                "sl",
                                "sq",
                                "sr",
                                "sr-latn",
                                "sv",
                                "sw",
                                "ta",
                                "te",
                                "tg",
                                "th",
                                "tk",
                                "tr",
                                "tt",
                                "udm",
                                "ug",
                                "uk",
                                "ur",
                                "uz",
                                "vi",
                                "zh-hans",
                                "zh-hant"
                            ]
                        }
                    }
                ],
                "tags": [
                    "schema"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/vnd.oai.openapi": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                }
                            },
                            "application/vnd.oai.openapi+json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/admin/transactions/": {
            "get": {
                "operationId": "v1_admin_transactions_retrieve",
                "description": "Lista delle transazioni blockchain per dashboard admin",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/admin/transactions/{transaction_id}/retry/": {
            "post": {
                "operationId": "v1_admin_transactions_retry_create",
                "description": "Ritenta una transazione fallita (solo per admin)",
                "parameters": [
                    {
                        "in": "path",
                        "name": "transaction_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/admin/transactions/stats/": {
            "get": {
                "operationId": "v1_admin_transactions_stats_retrieve",
                "description": "Statistiche delle transazioni per dashboard admin",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/admin/users/{user_id}/transactions/": {
            "get": {
                "operationId": "v1_admin_users_transactions_retrieve",
                "description": "Transazioni per uno specifico utente (per supporto clienti)",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/api/course/{course_id}/batch-data/": {
            "get": {
                "operationId": "v1_api_course_batch_data_retrieve",
                "description": "✅ OPTIMIZED - Single endpoint to get course data with lessons and user progress\nCombines: course details, lessons list, user progress, completion status",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/api/lesson/{lesson_id}/batch-data/": {
            "get": {
                "operationId": "v1_api_lesson_batch_data_retrieve",
                "description": "✅ OPTIMIZED - Single endpoint to get lesson data with exercises and completion status",
                "parameters": [
                    {
                        "in": "path",
                        "name": "lesson_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/api/student/batch-data/": {
            "get": {
                "operationId": "v1_api_student_batch_data_retrieve",
                "description": "✅ OPTIMIZED - Single endpoint to get all student data instead of multiple API calls\nCombines: courses, progress, notifications, recent activity",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/approve-course/{course_id}/": {
            "post": {
                "operationId": "v1_approve_course_create",
                "description": "Approve a course only if its teacher is approved and the course is pending.\n\nResponses:\n- 200: course approved\n- 409: conflict (course already approved)\n- 412: precondition failed (teacher not approved)",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/approve-teacher/{user_id}/": {
            "post": {
                "operationId": "v1_approve_teacher_create",
                "description": "Approve teacher using UserService",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/blockchain/balance/": {
            "get": {
                "operationId": "v1_blockchain_balance_retrieve",
                "description": "Get the TeoCoin balance for the authenticated user.\n\nReturns the current token balance for the user's linked wallet address.\nAlso updates the cached balance in the database.\n\nReturns:\n    JSON response with:\n    - balance: Current token balance as string\n    - wallet_address: User's linked wallet address\n    - token_info: General token information\n    - user_id: User ID for frontend verification\n    - username: Username for debugging\n\nErrors:\n    - 400: Wallet not linked to user account\n    - 500: Blockchain query error",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/blockchain/deposit/verify/": {
            "post": {
                "operationId": "v1_blockchain_deposit_verify_create",
                "description": "Verify an on-chain deposit transaction and credit the user's DB balance.\n\nBody:\n    tx_hash: string (required) - transaction hash to verify\n    wallet_address: string (optional) - user's wallet address to credit (fallback)\n\nThe endpoint will:\n- retrieve the transaction receipt via teocoin_service\n- inspect logs for a Transfer event to the platform/custodial address\n- if valid and confirmed, credit the matching user via db_teocoin_service.credit_user",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/blockchain/onchain/mint/": {
            "post": {
                "operationId": "v1_blockchain_onchain_mint_create",
                "description": "POST /api/v1/onchain/mint/\n\nBody: { amount: string|number, to: string (optional) }\n\nThis endpoint mints tokens on-chain using the platform minter key and returns\n{ tx_hash, tx_id } on success. It creates an idempotent BlockchainTransaction\nrecord using an optional related_id if provided.",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/blockchain/token-info/": {
            "get": {
                "operationId": "v1_blockchain_token_info_retrieve",
                "description": "Get general information about the TeoCoin token.\n\nThis endpoint provides public information about the TeoCoin token\nincluding contract details, symbol, decimals, etc. No authentication required.\n\nReturns:\n    JSON response with token information:\n    - name: Token name\n    - symbol: Token symbol\n    - decimals: Number of decimal places\n    - contract_address: Smart contract address\n    - network: Blockchain network name\n\nErrors:\n    - 500: Blockchain query error",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/blockchain/tx-status/": {
            "post": {
                "operationId": "v1_blockchain_tx_status_create",
                "description": "Check the status of a blockchain transaction.\n\nQueries the blockchain for transaction receipt and updates the local\ndatabase record if the transaction has been confirmed or failed.\n\nRequest Body:\n    tx_hash (str): Blockchain transaction hash to check\n\nReturns:\n    JSON response with:\n    - status: Transaction status (confirmed, failed, pending)\n    - block_number: Block number (if confirmed)\n    - gas_used: Gas used by transaction (if confirmed)\n    - transaction_hash: Transaction hash\n    - message: Status message (if pending)\n\nErrors:\n    - 400: Missing tx_hash parameter\n    - 500: Blockchain query error",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/blockchain/wallet/tx-status/{tx_identifier}/": {
            "get": {
                "operationId": "v1_blockchain_wallet_tx_status_retrieve",
                "description": "Return status of tx by id (int) or tx_hash (hex).",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tx_identifier",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/blockchain/wallet/withdraw/": {
            "post": {
                "operationId": "v1_blockchain_wallet_withdraw_create",
                "description": "Create + send a withdrawal transaction from platform -> user wallet.\n\nExpected body: { amount: decimal (optional) , related_id: str (optional for idempotency) }",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/courses/": {
            "get": {
                "operationId": "v1_courses_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "category",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "acquerello",
                                "acrilico",
                                "arte-classica",
                                "arte-contemporanea",
                                "arte-digitale",
                                "calligrafia",
                                "ceramica",
                                "design-grafico",
                                "disegno",
                                "fotografia",
                                "fumetto",
                                "illustrazione",
                                "incisione",
                                "mosaico",
                                "other",
                                "pittura-olio",
                                "restauro",
                                "scultura",
                                "storia-arte",
                                "tempera"
                            ]
                        },
                        "description": "Categoria del corso per facilitare la navigazione\n\n* `disegno` - ✏️ Disegno\n* `pittura-olio` - 🎨 Pittura ad Olio\n* `acquerello` - 💧 Acquerello\n* `tempera` - 🖌️ Tempera\n* `acrilico` - 🌈 Pittura Acrilica\n* `scultura` - 🗿 Scultura\n* `storia-arte` - 📚 Storia dell'Arte\n* `fotografia` - 📸 Fotografia Artistica\n* `illustrazione` - 🖊️ Illustrazione\n* `arte-digitale` - 💻 Arte Digitale\n* `ceramica` - 🏺 Ceramica e Terracotta\n* `incisione` - ⚱️ Incisione e Stampa\n* `mosaico` - 🔷 Mosaico\n* `restauro` - 🛠️ Restauro Artistico\n* `calligrafia` - ✒️ Calligrafia\n* `fumetto` - 💭 Fumetto e Graphic Novel\n* `design-grafico` - 🎨 Design Grafico\n* `arte-contemporanea` - 🆕 Arte Contemporanea\n* `arte-classica` - 🏛️ Arte Classica\n* `other` - 🎭 Altro"
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "price_eur",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "teacher",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Course"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "v1_courses_create",
                "tags": [
                    "v1"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Course"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Course"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Course"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Course"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/courses-service/": {
            "get": {
                "operationId": "v1_courses_service_retrieve",
                "description": "API view for listing courses using CourseService",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/courses-service/{id}/": {
            "get": {
                "operationId": "v1_courses_service_retrieve_2",
                "description": "API view for course details using CourseService",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/courses/{course_id}/confirm-payment/": {
            "post": {
                "operationId": "v1_courses_confirm_payment_create",
                "description": "Confirm successful payment and enroll student\n\nPOST /api/v1/courses/{course_id}/payment/confirm/\n{\n    \"payment_intent_id\": \"pi_...\",\n    \"process_discount\": true\n}",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/courses/{course_id}/create-payment-intent/": {
            "post": {
                "operationId": "v1_courses_create_payment_intent_create",
                "description": "Create Stripe payment intent with TeoCoin discount integration\n\nPOST /api/v1/courses/{course_id}/payment/create-intent/\n{\n    \"use_teocoin_discount\": true,\n    \"discount_percent\": 15,\n    \"student_address\": \"0x...\",\n    \"student_signature\": \"0x...\"\n}",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/courses/{course_id}/discount-status/": {
            "get": {
                "operationId": "v1_courses_discount_status_retrieve",
                "description": "Get status of TeoCoin discount requests for student\n\nGET /api/v1/courses/{course_id}/payment/discount-status/?student_address=0x...",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/courses/{course_id}/enroll/": {
            "post": {
                "operationId": "v1_courses_enroll_create",
                "description": "Enroll student in course with payment processing",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/courses/{course_id}/hybrid-payment/": {
            "post": {
                "operationId": "v1_courses_hybrid_payment_create",
                "description": "Initiate hybrid payment: deduct TeoCoin for discount, return Stripe intent for remainder.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            },
            "put": {
                "operationId": "v1_courses_hybrid_payment_update",
                "description": "Complete hybrid payment after Stripe payment success.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/courses/{course_id}/lessons/": {
            "get": {
                "operationId": "v1_courses_lessons_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/courses/{course_id}/outline/": {
            "get": {
                "operationId": "v1_courses_outline_retrieve",
                "description": "New endpoint returning course outline + progress in a single payload.\n\nGET /api/v1/courses/{course_id}/outline?include_progress=1",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/courses/{course_id}/payment-summary/": {
            "get": {
                "operationId": "v1_courses_payment_summary_retrieve",
                "description": "Get payment summary for a course including TeoCoin discount calculations\n\nGET /api/v1/courses/{course_id}/payment/summary/?discount_percent=15&student_address=0x...",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/courses/{course_id}/purchase/": {
            "post": {
                "operationId": "v1_courses_purchase_create",
                "description": "Handle course purchase using PaymentService",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/courses/{id}/": {
            "get": {
                "operationId": "v1_courses_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Course"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "v1_courses_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Course"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Course"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Course"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Course"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "v1_courses_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCourse"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCourse"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCourse"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Course"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "v1_courses_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/dashboard/admin/": {
            "get": {
                "operationId": "v1_dashboard_admin_retrieve",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/dashboard/data/": {
            "get": {
                "operationId": "v1_dashboard_data_retrieve",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/dashboard/role/": {
            "get": {
                "operationId": "v1_dashboard_role_retrieve",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/dashboard/student/": {
            "get": {
                "operationId": "v1_dashboard_student_retrieve",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/dashboard/teacher/": {
            "get": {
                "operationId": "v1_dashboard_teacher_retrieve",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/debug/stripe/": {
            "get": {
                "operationId": "v1_debug_stripe_retrieve",
                "description": "Debug endpoint to test Stripe configuration",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/exercises/{exercise_id}/debug_reviewers/": {
            "get": {
                "operationId": "v1_exercises_debug_reviewers_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "exercise_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/exercises/{exercise_id}/my_submission/": {
            "get": {
                "operationId": "v1_exercises_my_submission_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "exercise_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/exercises/{exercise_id}/review/": {
            "post": {
                "operationId": "v1_exercises_review_create",
                "description": "Accept either a submission_id (preferred) or an exercise_id in the URL.\nIf called with an exercise_id, resolve the ExerciseSubmission assigned to the\ncurrent user (reviewer) for that exercise and use it. This keeps backward\ncompatibility with endpoints that post using either parameter name.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "exercise_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/exercises/{exercise_id}/submissions/": {
            "get": {
                "operationId": "v1_exercises_submissions_retrieve_2",
                "parameters": [
                    {
                        "in": "path",
                        "name": "exercise_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/exercises/{exercise_id}/submit/": {
            "post": {
                "operationId": "v1_exercises_submit_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "exercise_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/exercises/{id}/": {
            "get": {
                "operationId": "v1_exercises_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Exercise"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/exercises/create/": {
            "post": {
                "operationId": "v1_exercises_create_create",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/exercises/submissions/": {
            "get": {
                "operationId": "v1_exercises_submissions_retrieve",
                "description": "Return all submissions by the current user, newest first.",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/lessons/{lesson_id}/": {
            "get": {
                "operationId": "v1_lessons_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "lesson_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Lesson"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/lessons/{lesson_id}/exercises/": {
            "get": {
                "operationId": "v1_lessons_exercises_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "lesson_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/lessons/{lesson_id}/mark_complete/": {
            "post": {
                "operationId": "v1_lessons_mark_complete_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "lesson_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/lessons/all/": {
            "get": {
                "operationId": "v1_lessons_all_list",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Lesson"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/lessons/create/": {
            "post": {
                "operationId": "v1_lessons_create_create",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/login/": {
            "post": {
                "operationId": "v1_login_create",
                "description": "Authenticate user and return JWT tokens.\n\nArgs:\n    request: HTTP request containing email and password\n\nReturns:\n    JSON response with access and refresh tokens, or error message",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/logout/": {
            "post": {
                "operationId": "v1_logout_create",
                "description": "API view for user logout.\nInvalida sia la sessione Django che il refresh token JWT (se presente).\nForza l'eliminazione di tutte le sessioni dell'utente.",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/notifications/": {
            "get": {
                "operationId": "v1_notifications_retrieve",
                "description": "Get user notifications with filtering options",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/notifications/{notification_id}/": {
            "delete": {
                "operationId": "v1_notifications_destroy",
                "description": "Delete a specific notification",
                "parameters": [
                    {
                        "in": "path",
                        "name": "notification_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/notifications/{notification_id}/read/": {
            "patch": {
                "operationId": "v1_notifications_read_partial_update",
                "description": "Mark a notification as read",
                "parameters": [
                    {
                        "in": "path",
                        "name": "notification_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/notifications/clear-all/": {
            "delete": {
                "operationId": "v1_notifications_clear_all_destroy",
                "description": "Delete all user notifications",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/notifications/mark-all-read/": {
            "post": {
                "operationId": "v1_notifications_mark_all_read_create",
                "description": "Mark all user notifications as read",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/notifications/unread-count/": {
            "get": {
                "operationId": "v1_notifications_unread_count_retrieve",
                "description": "Get count of unread notifications for the user",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/onchain/mint/": {
            "post": {
                "operationId": "v1_onchain_mint_create",
                "description": "POST /api/v1/onchain/mint/\n\nBody: { amount: string|number, to: string (optional) }\n\nThis endpoint mints tokens on-chain using the platform minter key and returns\n{ tx_hash, tx_id } on success. It creates an idempotent BlockchainTransaction\nrecord using an optional related_id if provided.",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/peer-reviews/submissions/{submission_id}/feedback/": {
            "get": {
                "operationId": "v1_peer_reviews_submissions_feedback_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "submission_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/pending-courses/": {
            "get": {
                "operationId": "v1_pending_courses_list",
                "description": "List courses pending approval but only for teachers who are themselves approved.\n\nThis enforces the business rule server-side: admin sees only pending courses\ncoming from approved teachers.",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Course"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/pending-teachers/": {
            "get": {
                "operationId": "v1_pending_teachers_retrieve",
                "description": "Get list of pending teachers using UserService",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/profile/": {
            "get": {
                "operationId": "v1_profile_retrieve",
                "description": "Get user profile details",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            },
            "put": {
                "operationId": "v1_profile_update",
                "description": "Update user profile",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/profile/progress/": {
            "get": {
                "operationId": "v1_profile_progress_retrieve",
                "description": "Get user progress with updated statistics",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/profile/settings/": {
            "get": {
                "operationId": "v1_profile_settings_retrieve",
                "description": "Get user settings",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            },
            "put": {
                "operationId": "v1_profile_settings_update",
                "description": "Update user settings",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/register/": {
            "post": {
                "operationId": "v1_register_create",
                "description": "API view for user registration.\n\nAllows new users to register by providing username, email, password, and role.\nAutomatically sends email verification after successful registration.\nNo authentication required (public endpoint).",
                "tags": [
                    "v1"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Register"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Register"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Register"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Register"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/reject-course/{course_id}/": {
            "post": {
                "operationId": "v1_reject_course_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/reject-teacher/{user_id}/": {
            "post": {
                "operationId": "v1_reject_teacher_create",
                "description": "Reject teacher using UserService",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/reviews/{submission_id}/": {
            "post": {
                "operationId": "v1_reviews_create",
                "description": "Accept either a submission_id (preferred) or an exercise_id in the URL.\nIf called with an exercise_id, resolve the ExerciseSubmission assigned to the\ncurrent user (reviewer) for that exercise and use it. This keeps backward\ncompatibility with endpoints that post using either parameter name.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "submission_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/reviews/{submission_id}/submit/": {
            "post": {
                "operationId": "v1_reviews_submit_create",
                "description": "Accept either a submission_id (preferred) or an exercise_id in the URL.\nIf called with an exercise_id, resolve the ExerciseSubmission assigned to the\ncurrent user (reviewer) for that exercise and use it. This keeps backward\ncompatibility with endpoints that post using either parameter name.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "submission_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/reviews/assigned/": {
            "get": {
                "operationId": "v1_reviews_assigned_retrieve",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/reviews/history/": {
            "get": {
                "operationId": "v1_reviews_history_retrieve",
                "description": "Return the review history for the current user (as reviewer).",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/reviews/my-submissions/": {
            "get": {
                "operationId": "v1_reviews_my_submissions_retrieve",
                "description": "GET: Return the current user's ExerciseSubmissions with aggregated\nfeedback counts and per-area averages.\n\nContract follows the frontend expectation: items[], count",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/rewards/achievement/": {
            "post": {
                "operationId": "v1_rewards_achievement_create",
                "description": "Trigger achievement reward manually",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/rewards/bulk/": {
            "post": {
                "operationId": "v1_rewards_bulk_create",
                "description": "Bulk process rewards for multiple users (admin only)",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/rewards/complete-lesson/": {
            "post": {
                "operationId": "v1_rewards_complete_lesson_create",
                "description": "Trigger reward for lesson completion using RewardService",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/rewards/course-completion/": {
            "post": {
                "operationId": "v1_rewards_course_completion_create",
                "description": "Check and trigger course completion rewards using RewardService",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/rewards/discounts/{decision_id}/accept/": {
            "post": {
                "operationId": "v1_rewards_discounts_accept_create",
                "description": "Accept a teacher discount decision and credit TEO to teacher.\n\nThis uses the existing teacher_make_decision atomic helper to perform\nDB balance updates and snapshot write. Additionally, create a\nBlockchainTransaction row so the frontend wallet transactions list\nshows the accepted amount immediately, and remove the related\n'teocoin_discount_pending' Notification so the inbox clears.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "decision_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/rewards/discounts/{decision_id}/decline/": {
            "post": {
                "operationId": "v1_rewards_discounts_decline_create",
                "description": "Decline choice: close snapshot and mark decision as declined (idempotent).\n\nUses teacher_make_decision with accept=False to centralize logic.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "decision_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/rewards/discounts/apply/": {
            "post": {
                "operationId": "v1_rewards_discounts_apply_create",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/rewards/discounts/backfill/": {
            "post": {
                "operationId": "v1_rewards_discounts_backfill_create",
                "description": "Convert missing PaymentDiscountSnapshot entries into real TeacherDiscountDecision\nrecords and create an in-app Notification for the teacher so the existing\nteacher-choices API can be used to accept/decline.\n\nInput JSON (optional): {\"snapshot_ids\": [1,2,3]}\nIf omitted, will process all snapshots for the authenticated teacher that\ncurrently do not have a 'teocoin_discount_pending' Notification.\n\nThis endpoint is idempotent: it will skip snapshots that already have a\ncorresponding Notification.",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/rewards/discounts/confirm/": {
            "post": {
                "operationId": "v1_rewards_discounts_confirm_create",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/rewards/discounts/missing-for-teacher/": {
            "get": {
                "operationId": "v1_rewards_discounts_missing_for_teacher_retrieve",
                "description": "Return PaymentDiscountSnapshot entries that likely missed a teacher notification.\n\nCriteria:\n- snapshot has a teacher set\n- and there is no Notification with notification_type 'teocoin_discount_pending' and related_object_id == snapshot.id\nThis helps the frontend backfill older transactions into the teacher inbox.",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/rewards/discounts/pending/": {
            "get": {
                "operationId": "v1_rewards_discounts_pending_retrieve",
                "description": "Return list of pending PaymentDiscountSnapshot entries for the authenticated teacher.\nEach snapshot includes offered_teacher_teo / offered_platform_teo (strings 8 d.p.) when possible.\nOrdered by expires_at if available, otherwise created_at ascending.",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/rewards/discounts/preview/": {
            "post": {
                "operationId": "v1_rewards_discounts_preview_create",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/rewards/leaderboard/": {
            "get": {
                "operationId": "v1_rewards_leaderboard_retrieve",
                "description": "Get reward leaderboard using RewardService",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/rewards/lesson-completion/": {
            "post": {
                "operationId": "v1_rewards_lesson_completion_create",
                "description": "Trigger reward for lesson completion using RewardService",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/rewards/staking/overview/": {
            "get": {
                "operationId": "v1_rewards_staking_overview_retrieve",
                "description": "Compatibility endpoint for frontend:\n\nReturns a compact overview of the authenticated teacher staking state.\n\nResponse fields (example):\n  - balance_teo: available + staked (float)\n  - available_teo: available balance (float)\n  - staked_teo: staked balance (float)\n  - tier_name: current tier string\n  - commission_rate: platform commission percent (float)\n  - bonus_multiplier: multiplicative factor for teacher earnings (e.g. 0.25 means +25%%)\n  - next_tier: name of the next tier or null\n  - next_tier_threshold_teo: amount required for next tier or null",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/rewards/staking/stake/": {
            "post": {
                "operationId": "v1_rewards_staking_stake_create",
                "description": "Stake TEO via rewards path (compat)",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/rewards/staking/tiers/": {
            "get": {
                "operationId": "v1_rewards_staking_tiers_retrieve",
                "description": "Expose staking tiers for the frontend under rewards path (compat).",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/rewards/staking/unstake/": {
            "post": {
                "operationId": "v1_rewards_staking_unstake_create",
                "description": "Unstake TEO via rewards path (compat)",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/rewards/summary/": {
            "get": {
                "operationId": "v1_rewards_summary_retrieve",
                "description": "Get reward summary for a user using RewardService",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/rewards/teacher-decisions/{decision_id}/{action}/": {
            "post": {
                "operationId": "v1_rewards_teacher_decisions_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "decision_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/rewards/user-summary/": {
            "get": {
                "operationId": "v1_rewards_user_summary_retrieve",
                "description": "Get reward summary for a user using RewardService",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/self-verify/": {
            "post": {
                "operationId": "v1_self_verify_create",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/services/discount/approve/": {
            "post": {
                "operationId": "v1_services_discount_approve_create",
                "description": "Approve a discount request",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/services/discount/calculate/": {
            "post": {
                "operationId": "v1_services_discount_calculate_create",
                "description": "Calculate TEO cost for a given course price and discount percentage",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/services/discount/create/": {
            "post": {
                "operationId": "v1_services_discount_create_create",
                "description": "Create a new discount request",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/services/discount/decline/": {
            "post": {
                "operationId": "v1_services_discount_decline_create",
                "description": "Decline a discount request",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/services/discount/request/{request_id}/": {
            "get": {
                "operationId": "v1_services_discount_request_retrieve",
                "description": "Get details of a specific discount request",
                "parameters": [
                    {
                        "in": "path",
                        "name": "request_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/services/discount/signature-data/": {
            "post": {
                "operationId": "v1_services_discount_signature_data_create",
                "description": "Generate signature data for student pre-approval",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/services/discount/stats/": {
            "get": {
                "operationId": "v1_services_discount_stats_retrieve",
                "description": "Get discount system statistics",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/services/discount/status/": {
            "get": {
                "operationId": "v1_services_discount_status_retrieve",
                "description": "Get discount system status and health check",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/services/discount/student/{student_address}/": {
            "get": {
                "operationId": "v1_services_discount_student_retrieve",
                "description": "Get all discount requests for a student",
                "parameters": [
                    {
                        "in": "path",
                        "name": "student_address",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/services/discount/teacher/{teacher_address}/": {
            "get": {
                "operationId": "v1_services_discount_teacher_retrieve",
                "description": "Get all discount requests for a teacher",
                "parameters": [
                    {
                        "in": "path",
                        "name": "teacher_address",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/services/earnings/history/": {
            "get": {
                "operationId": "v1_services_earnings_history_retrieve",
                "description": "Get user's TeoCoin transaction history (earnings and expenditures)\nUsing the clean database system instead of the old blockchain earning service.",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/services/staking/calculator/": {
            "get": {
                "operationId": "v1_services_staking_calculator_retrieve",
                "description": "Calculate commission rates and tier progression\n\nQuery params:\n    current_stake (float): Current staked amount",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/services/staking/info/": {
            "get": {
                "operationId": "v1_services_staking_info_retrieve",
                "description": "Get complete staking information for the authenticated teacher\n\nOnly teachers can access staking functionality.\n\nReturns:\n    - current_balance: Available TEO balance\n    - staked_amount: Currently staked TEO\n    - tier: Current staking tier\n    - commission_rate: Current commission rate\n    - next_tier_requirement: TEO needed for next tier",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/services/staking/stake/": {
            "post": {
                "operationId": "v1_services_staking_stake_create",
                "description": "Stake TEO tokens from available balance (Teachers only)\n\nBody:\n    amount (float): Amount of TEO to stake",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/services/staking/tiers/": {
            "get": {
                "operationId": "v1_services_staking_tiers_retrieve",
                "description": "Get all staking tier configurations\nNo authentication required - public information",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/services/staking/unstake/": {
            "post": {
                "operationId": "v1_services_staking_unstake_create",
                "description": "Unstake TEO tokens back to available balance (Teachers only)\n\nBody:\n    amount (float): Amount of TEO to unstake",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/student/enrolled_courses/": {
            "get": {
                "operationId": "v1_student_enrolled_courses_retrieve",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/submissions/{submission_id}/": {
            "get": {
                "operationId": "v1_submissions_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "submission_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/submissions/{submission_id}/review/": {
            "post": {
                "operationId": "v1_submissions_review_create",
                "description": "Accept either a submission_id (preferred) or an exercise_id in the URL.\nIf called with an exercise_id, resolve the ExerciseSubmission assigned to the\ncurrent user (reviewer) for that exercise and use it. This keeps backward\ncompatibility with endpoints that post using either parameter name.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "submission_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/submissions/{submission_id}/review-detail/": {
            "get": {
                "operationId": "v1_submissions_review_detail_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "submission_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teacher-choices/": {
            "get": {
                "operationId": "v1_teacher_choices_list",
                "description": "ViewSet for managing teacher discount decisions",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TeacherDiscountDecision"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "v1_teacher_choices_create",
                "description": "ViewSet for managing teacher discount decisions",
                "tags": [
                    "v1"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeacherDiscountDecision"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TeacherDiscountDecision"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TeacherDiscountDecision"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeacherDiscountDecision"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/teacher-choices/{decision_id}/accept/": {
            "post": {
                "operationId": "v1_teacher_choices_accept_create",
                "description": "Accept a teacher discount decision and credit TEO to teacher.\n\nThis uses the existing teacher_make_decision atomic helper to perform\nDB balance updates and snapshot write. Additionally, create a\nBlockchainTransaction row so the frontend wallet transactions list\nshows the accepted amount immediately, and remove the related\n'teocoin_discount_pending' Notification so the inbox clears.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "decision_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teacher-choices/{id}/": {
            "get": {
                "operationId": "v1_teacher_choices_retrieve",
                "description": "ViewSet for managing teacher discount decisions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeacherDiscountDecision"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "v1_teacher_choices_update",
                "description": "ViewSet for managing teacher discount decisions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeacherDiscountDecision"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TeacherDiscountDecision"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TeacherDiscountDecision"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeacherDiscountDecision"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "v1_teacher_choices_partial_update",
                "description": "Standardize decision update via PATCH /teacher-choices/{id}/ with body like\n{\"status\": \"accepted\"|\"rejected\"|\"declined\"} or {\"decision\": ...}.\nAccept common synonyms and enforce ownership and expiration.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTeacherDiscountDecision"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTeacherDiscountDecision"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTeacherDiscountDecision"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeacherDiscountDecision"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "v1_teacher_choices_destroy",
                "description": "ViewSet for managing teacher discount decisions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teacher-choices/{id}/accept/": {
            "post": {
                "operationId": "v1_teacher_choices_accept_create_2",
                "description": "Accept a TeoCoin discount request",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeacherDiscountDecision"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TeacherDiscountDecision"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TeacherDiscountDecision"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeacherDiscountDecision"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/teacher-choices/{id}/decline/": {
            "post": {
                "operationId": "v1_teacher_choices_decline_create",
                "description": "Decline a TeoCoin discount request",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeacherDiscountDecision"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TeacherDiscountDecision"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TeacherDiscountDecision"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeacherDiscountDecision"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/teacher-choices/{id}/earnings_comparison/": {
            "get": {
                "operationId": "v1_teacher_choices_earnings_comparison_retrieve",
                "description": "Compare earnings for accepting vs declining",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeacherDiscountDecision"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/teacher-choices/pending/": {
            "get": {
                "operationId": "v1_teacher_choices_pending_retrieve",
                "description": "Get all pending discount requests for the teacher",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeacherDiscountDecision"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/teacher-preferences/": {
            "get": {
                "operationId": "v1_teacher_preferences_list",
                "description": "ViewSet for managing teacher choice preferences",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TeacherChoicePreference"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "v1_teacher_preferences_create",
                "description": "ViewSet for managing teacher choice preferences",
                "tags": [
                    "v1"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeacherChoicePreference"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TeacherChoicePreference"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TeacherChoicePreference"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeacherChoicePreference"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/teacher-preferences/{id}/": {
            "get": {
                "operationId": "v1_teacher_preferences_retrieve",
                "description": "ViewSet for managing teacher choice preferences",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeacherChoicePreference"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "v1_teacher_preferences_update",
                "description": "ViewSet for managing teacher choice preferences",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeacherChoicePreference"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TeacherChoicePreference"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TeacherChoicePreference"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeacherChoicePreference"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "v1_teacher_preferences_partial_update",
                "description": "ViewSet for managing teacher choice preferences",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTeacherChoicePreference"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTeacherChoicePreference"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTeacherChoicePreference"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeacherChoicePreference"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "v1_teacher_preferences_destroy",
                "description": "ViewSet for managing teacher choice preferences",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teacher-preferences/current/": {
            "get": {
                "operationId": "v1_teacher_preferences_current_retrieve",
                "description": "Get current teacher preferences",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeacherChoicePreference"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/teacher-preferences/statistics/": {
            "get": {
                "operationId": "v1_teacher_preferences_statistics_retrieve",
                "description": "Get teacher decision statistics",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeacherChoicePreference"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/teacher-preferences/update_preference/": {
            "post": {
                "operationId": "v1_teacher_preferences_update_preference_create",
                "description": "Update teacher choice preferences",
                "tags": [
                    "v1"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeacherChoicePreference"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TeacherChoicePreference"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TeacherChoicePreference"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeacherChoicePreference"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/teacher/courses/": {
            "get": {
                "operationId": "v1_teacher_courses_list",
                "description": "List courses owned by the authenticated teacher.\nThis endpoint is used by the Studio frontend to show the teacher's courses.",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TeacherCourse"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/teacher/courses/students/": {
            "get": {
                "operationId": "v1_teacher_courses_students_retrieve",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teachers/{user_id}/approve/": {
            "post": {
                "operationId": "v1_teachers_approve_create",
                "description": "Approve teacher using UserService",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teachers/{user_id}/reject/": {
            "post": {
                "operationId": "v1_teachers_reject_create",
                "description": "Reject teacher using UserService",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teachers/pending/": {
            "get": {
                "operationId": "v1_teachers_pending_retrieve",
                "description": "Get list of pending teachers using UserService",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/admin/absorptions/overview/": {
            "get": {
                "operationId": "v1_teocoin_admin_absorptions_overview_retrieve",
                "description": "Admin view for platform absorption statistics",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/admin/platform/stats/": {
            "get": {
                "operationId": "v1_teocoin_admin_platform_stats_retrieve",
                "description": "Get platform TeoCoin statistics (admin only)",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/admin/withdrawals/pending/": {
            "get": {
                "operationId": "v1_teocoin_admin_withdrawals_pending_retrieve",
                "description": "Get all pending withdrawal requests (admin only)",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/admin/withdrawals/stats/": {
            "get": {
                "operationId": "v1_teocoin_admin_withdrawals_stats_retrieve",
                "description": "Get withdrawal statistics (admin only)",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/apply-discount/": {
            "post": {
                "operationId": "v1_teocoin_apply_discount_create",
                "description": "DEPRECATED: Apply TeoCoin discount\n\nThis endpoint is now deprecated to prevent premature TeoCoin deduction.\nTeoCoin is now deducted automatically in ConfirmPaymentView after Stripe payment succeeds.",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/balance/": {
            "get": {
                "operationId": "v1_teocoin_balance_retrieve",
                "description": "Get current user's TeoCoin balance",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/burn-deposit/": {
            "post": {
                "operationId": "v1_teocoin_burn_deposit_create",
                "description": "Process a burn deposit transaction\n\nBody:\n{\n    \"transaction_hash\": \"0x123...\",\n    \"amount\": \"100.00\",\n    \"metamask_address\": \"0xabc...\"\n}",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/burn-deposit/status/{tx_hash}/": {
            "get": {
                "operationId": "v1_teocoin_burn_deposit_status_retrieve",
                "description": "Check if a burn transaction has already been processed",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tx_hash",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/calculate-discount/": {
            "post": {
                "operationId": "v1_teocoin_calculate_discount_create",
                "description": "Calculate discount based on user's balance and course price",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/credit/": {
            "post": {
                "operationId": "v1_teocoin_credit_create",
                "description": "Credit TEO tokens to a user",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/deposit/verify/": {
            "post": {
                "operationId": "v1_teocoin_deposit_verify_create",
                "description": "Verify an on-chain deposit transaction and credit the user's DB balance.\n\nBody:\n    tx_hash: string (required) - transaction hash to verify\n    wallet_address: string (optional) - user's wallet address to credit (fallback)\n\nThe endpoint will:\n- retrieve the transaction receipt via teocoin_service\n- inspect logs for a Transfer event to the platform/custodial address\n- if valid and confirmed, credit the matching user via db_teocoin_service.credit_user",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/legacy/balance/": {
            "get": {
                "operationId": "v1_teocoin_legacy_balance_retrieve",
                "description": "Get current user's TeoCoin balance",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/legacy/transactions/": {
            "get": {
                "operationId": "v1_teocoin_legacy_transactions_retrieve",
                "description": "Get current user's transaction history",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/legacy/withdraw/": {
            "post": {
                "operationId": "v1_teocoin_legacy_withdraw_create",
                "description": "Create withdrawal request\n\nBody:\n{\n    \"amount\": \"10.50\",\n    \"wallet_address\": \"0x1234567890123456789012345678901234567890\"\n}",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/legacy/withdraw/{withdrawal_id}/cancel/": {
            "post": {
                "operationId": "v1_teocoin_legacy_withdraw_cancel_create",
                "description": "Cancel withdrawal request",
                "parameters": [
                    {
                        "in": "path",
                        "name": "withdrawal_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/legacy/withdrawals/": {
            "get": {
                "operationId": "v1_teocoin_legacy_withdrawals_retrieve",
                "description": "Get current user's withdrawal history",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/purchase-course/": {
            "post": {
                "operationId": "v1_teocoin_purchase_course_create",
                "description": "Purchase course with TeoCoin",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/statistics/": {
            "get": {
                "operationId": "v1_teocoin_statistics_retrieve",
                "description": "Get platform TeoCoin statistics",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/student/balance/": {
            "get": {
                "operationId": "v1_teocoin_student_balance_retrieve",
                "description": "Get user's current TeoCoin balance\n\nReturns:\n{\n    \"success\": true,\n    \"balance\": {\n        \"available\": \"123.45\",\n        \"staked\": \"250.00\",\n        \"pending_withdrawal\": \"0.00\",\n        \"total\": \"373.45\"\n    },\n    \"user_role\": \"student\"\n}",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/student/stats/": {
            "get": {
                "operationId": "v1_teocoin_student_stats_retrieve",
                "description": "Get student's TeoCoin statistics and journey information\n\nReturns:\n{\n    \"success\": true,\n    \"stats\": {\n        \"total_earned\": \"250.00\",\n        \"total_used_discounts\": \"50.00\",\n        \"total_withdrawn\": \"100.00\",\n        \"total_transactions\": 15,\n        \"achievement_level\": \"Bronze\",\n        \"next_level_info\": \"Earn 100 more TEO to reach Silver level\",\n        \"recent_achievement\": \"First withdrawal completed!\"\n    }\n}",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/teacher/absorptions/": {
            "get": {
                "operationId": "v1_teocoin_teacher_absorptions_retrieve",
                "description": "Get pending discount absorption opportunities for the teacher",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/teacher/absorptions/choose/": {
            "post": {
                "operationId": "v1_teocoin_teacher_absorptions_choose_create",
                "description": "Process teacher choice for discount absorption using the service layer.\nTrust server-side calculated amounts; do not accept client-provided TEO numbers.\nExpected payload: { absorption_id: int, choice: 'teo' | 'eur' }",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/teacher/absorptions/history/": {
            "get": {
                "operationId": "v1_teocoin_teacher_absorptions_history_retrieve",
                "description": "Get teacher's absorption history and statistics",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/teacher/absorptions/pending/": {
            "get": {
                "operationId": "v1_teocoin_teacher_absorptions_pending_retrieve",
                "description": "Get pending discount absorption opportunities for the teacher",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/teacher/choice/": {
            "post": {
                "operationId": "v1_teocoin_teacher_choice_create",
                "description": "Process teacher choice for discount absorption using the service layer.\nTrust server-side calculated amounts; do not accept client-provided TEO numbers.\nExpected payload: { absorption_id: int, choice: 'teo' | 'eur' }",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/transactions/": {
            "get": {
                "operationId": "v1_teocoin_transactions_retrieve",
                "description": "Get user's TeoCoin transaction history",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/transactions/history/": {
            "get": {
                "operationId": "v1_teocoin_transactions_history_retrieve",
                "description": "Get user's transaction history with optional limit\n\nQuery Parameters:\n- limit: Number of transactions to return (default 10)\n\nReturns:\n{\n    \"success\": true,\n    \"transactions\": [\n        {\n            \"id\": 1,\n            \"type\": \"reward\",\n            \"amount\": \"10.00\",\n            \"description\": \"Exercise completion reward\",\n            \"created_at\": \"2025-08-06T12:30:00Z\",\n            \"status\": \"completed\"\n        }\n    ]\n}",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/withdraw/": {
            "post": {
                "operationId": "v1_teocoin_withdraw_create",
                "description": "Create withdrawal request and auto-process it immediately",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/withdrawal/{withdrawal_id}/": {
            "get": {
                "operationId": "v1_teocoin_withdrawal_retrieve",
                "description": "Get status of specific withdrawal request",
                "parameters": [
                    {
                        "in": "path",
                        "name": "withdrawal_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/withdrawals/{withdrawal_id}/cancel/": {
            "post": {
                "operationId": "v1_teocoin_withdrawals_cancel_create",
                "description": "Cancel withdrawal request",
                "parameters": [
                    {
                        "in": "path",
                        "name": "withdrawal_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/withdrawals/{withdrawal_id}/process/": {
            "post": {
                "operationId": "v1_teocoin_withdrawals_process_create",
                "description": "Process a specific withdrawal by ID\n\nURL: /api/v1/teocoin/withdrawals/{withdrawal_id}/process/\nBody: {} (empty)\n\nReturns real-time transaction feedback including transaction hash",
                "parameters": [
                    {
                        "in": "path",
                        "name": "withdrawal_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/withdrawals/{withdrawal_id}/status/": {
            "get": {
                "operationId": "v1_teocoin_withdrawals_status_retrieve",
                "description": "Get withdrawal status by ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "withdrawal_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/withdrawals/admin/mint/": {
            "post": {
                "operationId": "v1_teocoin_withdrawals_admin_mint_create",
                "description": "Mint TeoCoin tokens directly to an address\n\nBody:\n{\n    \"amount\": \"10.00\",\n    \"to_address\": \"0x742d35Cc6475C1C2C6b2FF4a4F5D6f865c123456\"\n}",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/withdrawals/admin/pending/": {
            "get": {
                "operationId": "v1_teocoin_withdrawals_admin_pending_retrieve",
                "description": "Get all pending withdrawal requests (admin only)",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/withdrawals/admin/process-pending/": {
            "post": {
                "operationId": "v1_teocoin_withdrawals_admin_process_pending_create",
                "description": "Process all pending withdrawals by minting tokens\nOnly the platform should call this endpoint",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/withdrawals/admin/stats/": {
            "get": {
                "operationId": "v1_teocoin_withdrawals_admin_stats_retrieve",
                "description": "Get withdrawal statistics (admin only)",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/withdrawals/balance/": {
            "get": {
                "operationId": "v1_teocoin_withdrawals_balance_retrieve",
                "description": "Get current user's TeoCoin balance",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/withdrawals/create/": {
            "post": {
                "operationId": "v1_teocoin_withdrawals_create_create",
                "description": "Create withdrawal request\n\nBody:\n{\n    \"amount\": \"50.00\",\n    \"metamask_address\": \"0x742d35Cc6475C1C2C6b2FF4a4F5D6f865c123456\"\n}",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/withdrawals/history/": {
            "get": {
                "operationId": "v1_teocoin_withdrawals_history_retrieve",
                "description": "Get current user's withdrawal history",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/withdrawals/limits/": {
            "get": {
                "operationId": "v1_teocoin_withdrawals_limits_retrieve",
                "description": "Get withdrawal limits for current user",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/teocoin/withdrawals/pending/": {
            "get": {
                "operationId": "v1_teocoin_withdrawals_pending_retrieve",
                "description": "Get current user's pending withdrawals",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/token/": {
            "post": {
                "operationId": "v1_token_create",
                "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
                "tags": [
                    "v1"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomTokenObtainPair"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomTokenObtainPair"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomTokenObtainPair"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomTokenObtainPair"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/token/refresh/": {
            "post": {
                "operationId": "v1_token_refresh_create",
                "description": "Construct a refreshed access token and inject custom claims (username, role, teo_coins)\ndirectly to ensure frontend receives role claim even if serializer path behaved\nunexpectedly in some environments.\nFalls back to default serializer behaviour on failure.",
                "tags": [
                    "v1"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomTokenRefresh"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomTokenRefresh"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomTokenRefresh"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomTokenRefresh"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/token/register/": {
            "post": {
                "operationId": "v1_token_register_create",
                "description": "API view for user registration.\n\nAllows new users to register by providing username, email, password, and role.\nAutomatically sends email verification after successful registration.\nNo authentication required (public endpoint).",
                "tags": [
                    "v1"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Register"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Register"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Register"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Register"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/transactions/": {
            "get": {
                "operationId": "v1_transactions_list",
                "description": "List view for user's blockchain transaction history with filtering",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BlockchainTransaction"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/users/teachers/{user_id}/approve/": {
            "post": {
                "operationId": "v1_users_teachers_approve_create",
                "description": "Approve teacher using UserService",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/users/teachers/{user_id}/reject/": {
            "post": {
                "operationId": "v1_users_teachers_reject_create",
                "description": "Reject teacher using UserService",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/users/teachers/pending/": {
            "get": {
                "operationId": "v1_users_teachers_pending_retrieve",
                "description": "Get list of pending teachers using UserService",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/verify-email/{uid}/{token}/": {
            "get": {
                "operationId": "v1_verify_email_retrieve",
                "description": "Verify user email using UID and token from verification link.\n\nArgs:\n    request: HTTP request object\n    uid: Base64 encoded user ID\n    token: Email verification token\n\nReturns:\n    JSON response indicating success or failure of verification",
                "parameters": [
                    {
                        "in": "path",
                        "name": "token",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "uid",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/wallet/burn/": {
            "post": {
                "operationId": "v1_wallet_burn_create",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/wallet/challenge/": {
            "post": {
                "operationId": "v1_wallet_challenge_create",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/wallet/connect/": {
            "post": {
                "operationId": "v1_wallet_connect_create",
                "description": "Connect wallet address to user profile",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/wallet/disconnect/": {
            "post": {
                "operationId": "v1_wallet_disconnect_create",
                "description": "Disconnect wallet address from user profile",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/wallet/health/": {
            "get": {
                "operationId": "v1_wallet_health_retrieve",
                "description": "Simple health check for wallet endpoints (useful for FE CORS/JWT checks).",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/wallet/link/": {
            "post": {
                "operationId": "v1_wallet_link_create",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            },
            "delete": {
                "operationId": "v1_wallet_link_destroy",
                "description": "Unlink wallet from authenticated user",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/wallet/mint/": {
            "post": {
                "operationId": "v1_wallet_mint_create",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/wallet/transactions/": {
            "get": {
                "operationId": "v1_wallet_transactions_list",
                "description": "List view for user's blockchain transaction history with filtering",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BlockchainTransaction"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/wallet/withdraw/": {
            "post": {
                "operationId": "v1_wallet_withdraw_create",
                "description": "Create a withdrawal request and (optionally) auto-process by minting tokens to the user's MetaMask address.\n\nBody:\n    amount: string/decimal (required)\n    metamask_address: string (optional, fallback to user.wallet_address)\n\nReturns:\n    JSON with withdrawal_id and tx_hash (if auto-processed) or pending status.",
                "tags": [
                    "v1"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "BlockchainTransaction": {
                "type": "object",
                "description": "Serializer for blockchain transactions - replaces the old TeoCoinTransaction serializer.\nProvides detailed information about blockchain transactions including related objects.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "transaction_type": {
                        "$ref": "#/components/schemas/TransactionTypeEnum"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,10}(?:\\.\\d{0,8})?$"
                    },
                    "from_address": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 42
                    },
                    "to_address": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 42
                    },
                    "tx_hash": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 66
                    },
                    "status": {
                        "$ref": "#/components/schemas/BlockchainTransactionStatusEnum"
                    },
                    "error_message": {
                        "type": "string",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "confirmed_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "explorer_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true
                    },
                    "related_object_title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "user": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "amount",
                    "confirmed_at",
                    "created_at",
                    "description",
                    "explorer_url",
                    "id",
                    "related_object_title",
                    "transaction_type",
                    "user"
                ]
            },
            "BlockchainTransactionStatusEnum": {
                "enum": [
                    "pending",
                    "confirmed",
                    "completed",
                    "failed"
                ],
                "type": "string",
                "description": "* `pending` - In Attesa\n* `confirmed` - Confermata\n* `completed` - Completata\n* `failed` - Fallita"
            },
            "CategoryEnum": {
                "enum": [
                    "disegno",
                    "pittura-olio",
                    "acquerello",
                    "tempera",
                    "acrilico",
                    "scultura",
                    "storia-arte",
                    "fotografia",
                    "illustrazione",
                    "arte-digitale",
                    "ceramica",
                    "incisione",
                    "mosaico",
                    "restauro",
                    "calligrafia",
                    "fumetto",
                    "design-grafico",
                    "arte-contemporanea",
                    "arte-classica",
                    "other"
                ],
                "type": "string",
                "description": "* `disegno` - ✏️ Disegno\n* `pittura-olio` - 🎨 Pittura ad Olio\n* `acquerello` - 💧 Acquerello\n* `tempera` - 🖌️ Tempera\n* `acrilico` - 🌈 Pittura Acrilica\n* `scultura` - 🗿 Scultura\n* `storia-arte` - 📚 Storia dell'Arte\n* `fotografia` - 📸 Fotografia Artistica\n* `illustrazione` - 🖊️ Illustrazione\n* `arte-digitale` - 💻 Arte Digitale\n* `ceramica` - 🏺 Ceramica e Terracotta\n* `incisione` - ⚱️ Incisione e Stampa\n* `mosaico` - 🔷 Mosaico\n* `restauro` - 🛠️ Restauro Artistico\n* `calligrafia` - ✒️ Calligrafia\n* `fumetto` - 💭 Fumetto e Graphic Novel\n* `design-grafico` - 🎨 Design Grafico\n* `arte-contemporanea` - 🆕 Arte Contemporanea\n* `arte-classica` - 🏛️ Arte Classica\n* `other` - 🎭 Altro"
            },
            "Course": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string"
                    },
                    "category": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CategoryEnum"
                            }
                        ],
                        "description": "Categoria del corso per facilitare la navigazione\n\n* `disegno` - ✏️ Disegno\n* `pittura-olio` - 🎨 Pittura ad Olio\n* `acquerello` - 💧 Acquerello\n* `tempera` - 🖌️ Tempera\n* `acrilico` - 🌈 Pittura Acrilica\n* `scultura` - 🗿 Scultura\n* `storia-arte` - 📚 Storia dell'Arte\n* `fotografia` - 📸 Fotografia Artistica\n* `illustrazione` - 🖊️ Illustrazione\n* `arte-digitale` - 💻 Arte Digitale\n* `ceramica` - 🏺 Ceramica e Terracotta\n* `incisione` - ⚱️ Incisione e Stampa\n* `mosaico` - 🔷 Mosaico\n* `restauro` - 🛠️ Restauro Artistico\n* `calligrafia` - ✒️ Calligrafia\n* `fumetto` - 💭 Fumetto e Graphic Novel\n* `design-grafico` - 🎨 Design Grafico\n* `arte-contemporanea` - 🆕 Arte Contemporanea\n* `arte-classica` - 🏛️ Arte Classica\n* `other` - 🎭 Altro"
                    },
                    "category_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "cover_image": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Immagine di copertina del corso (opzionale)"
                    },
                    "cover_image_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "price_eur": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$",
                        "description": "Prezzo in Euro per pagamento fiat"
                    },
                    "teocoin_price": {
                        "type": "string",
                        "readOnly": true
                    },
                    "teocoin_discount_percent": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,2})?$",
                        "description": "Percentuale sconto pagando con TeoCoin"
                    },
                    "teocoin_reward": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$",
                        "description": "TeoCoin ricompensa per completamento corso"
                    },
                    "teacher": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/User"
                            }
                        ],
                        "readOnly": true
                    },
                    "lessons": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Lesson"
                        },
                        "readOnly": true
                    },
                    "total_duration": {
                        "type": "string",
                        "readOnly": true
                    },
                    "students": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true
                    },
                    "student_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "is_enrolled": {
                        "type": "string",
                        "readOnly": true
                    },
                    "is_approved": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "required": [
                    "category_display",
                    "cover_image_url",
                    "created_at",
                    "description",
                    "id",
                    "is_approved",
                    "is_enrolled",
                    "lessons",
                    "student_count",
                    "students",
                    "teacher",
                    "teocoin_price",
                    "title",
                    "total_duration",
                    "updated_at"
                ]
            },
            "CustomTokenObtainPair": {
                "type": "object",
                "description": "Custom JWT token serializer that adds user-specific data to the token response.\n\nExtends the default TokenObtainPairSerializer to include additional user claims\nlike username, role, and teo_coins balance in the JWT token payload.",
                "properties": {
                    "email": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "email",
                    "password"
                ]
            },
            "CustomTokenRefresh": {
                "type": "object",
                "description": "Custom refresh serializer that preserves/adds the same custom claims\n(username, role, teo_coins) to the newly issued access token so the\nfrontend can reliably read role from the JWT after a refresh.",
                "properties": {
                    "refresh": {
                        "type": "string"
                    },
                    "access": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "access",
                    "refresh"
                ]
            },
            "DecisionEnum": {
                "enum": [
                    "pending",
                    "accepted",
                    "declined",
                    "expired"
                ],
                "type": "string",
                "description": "* `pending` - Pending Decision\n* `accepted` - Accepted TeoCoin\n* `declined` - Declined TeoCoin\n* `expired` - Decision Expired"
            },
            "DifficultyEnum": {
                "enum": [
                    "beginner",
                    "intermediate",
                    "advanced"
                ],
                "type": "string",
                "description": "* `beginner` - Principiante\n* `intermediate` - Intermedio\n* `advanced` - Avanzato"
            },
            "Exercise": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "lesson": {
                        "type": "integer"
                    },
                    "exercise_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ExerciseTypeEnum"
                            }
                        ],
                        "description": "Tipo di esercizio\n\n* `practical` - Pratico\n* `study` - Studio\n* `technique` - Tecnica\n* `creative` - Creativo"
                    },
                    "exercise_type_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "difficulty": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DifficultyEnum"
                            }
                        ],
                        "description": "Livello di difficoltà\n\n* `beginner` - Principiante\n* `intermediate` - Intermedio\n* `advanced` - Avanzato"
                    },
                    "difficulty_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "time_estimate": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Tempo stimato per completare l'esercizio (in minuti)"
                    },
                    "materials": {
                        "type": "string",
                        "description": "Lista dei materiali necessari per l'esercizio"
                    },
                    "instructions": {
                        "type": "string",
                        "description": "Istruzioni dettagliate per svolgere l'esercizio"
                    },
                    "reference_image": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Immagine di riferimento per l'esercizio (opzionale)"
                    },
                    "reference_image_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ExerciseStatusEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "score": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "feedback": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "difficulty_display",
                    "exercise_type_display",
                    "feedback",
                    "id",
                    "lesson",
                    "reference_image_url",
                    "score",
                    "status",
                    "title",
                    "updated_at"
                ]
            },
            "ExerciseStatusEnum": {
                "enum": [
                    "created",
                    "submitted",
                    "reviewed"
                ],
                "type": "string",
                "description": "* `created` - Creato\n* `submitted` - Inviato\n* `reviewed` - Valutato"
            },
            "ExerciseTypeEnum": {
                "enum": [
                    "practical",
                    "study",
                    "technique",
                    "creative"
                ],
                "type": "string",
                "description": "* `practical` - Pratico\n* `study` - Studio\n* `technique` - Tecnica\n* `creative` - Creativo"
            },
            "Lesson": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "content": {
                        "type": "string"
                    },
                    "lesson_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LessonTypeEnum"
                            }
                        ],
                        "description": "Tipo di lezione\n\n* `theory` - Teoria\n* `practical` - Pratica\n* `video` - Video\n* `mixed` - Mista"
                    },
                    "lesson_type_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "video_file": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "File video per lezioni video (max 200MB, formati: MP4, AVI, MOV, WMV, FLV, WebM, MKV)"
                    },
                    "video_file_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "course": {
                        "type": "integer",
                        "nullable": true
                    },
                    "duration": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Durata in minuti"
                    },
                    "teacher": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "materials": {
                        "description": "Lista di URL per materiali di supporto (immagini, PDF)."
                    },
                    "order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "description": "Posizione della lezione all'interno del corso."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "course_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "course_title": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "content",
                    "course_id",
                    "course_title",
                    "created_at",
                    "id",
                    "lesson_type_display",
                    "teacher",
                    "title",
                    "video_file_url"
                ]
            },
            "LessonTypeEnum": {
                "enum": [
                    "theory",
                    "practical",
                    "video",
                    "mixed"
                ],
                "type": "string",
                "description": "* `theory` - Teoria\n* `practical` - Pratica\n* `video` - Video\n* `mixed` - Mista"
            },
            "PatchedCourse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string"
                    },
                    "category": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CategoryEnum"
                            }
                        ],
                        "description": "Categoria del corso per facilitare la navigazione\n\n* `disegno` - ✏️ Disegno\n* `pittura-olio` - 🎨 Pittura ad Olio\n* `acquerello` - 💧 Acquerello\n* `tempera` - 🖌️ Tempera\n* `acrilico` - 🌈 Pittura Acrilica\n* `scultura` - 🗿 Scultura\n* `storia-arte` - 📚 Storia dell'Arte\n* `fotografia` - 📸 Fotografia Artistica\n* `illustrazione` - 🖊️ Illustrazione\n* `arte-digitale` - 💻 Arte Digitale\n* `ceramica` - 🏺 Ceramica e Terracotta\n* `incisione` - ⚱️ Incisione e Stampa\n* `mosaico` - 🔷 Mosaico\n* `restauro` - 🛠️ Restauro Artistico\n* `calligrafia` - ✒️ Calligrafia\n* `fumetto` - 💭 Fumetto e Graphic Novel\n* `design-grafico` - 🎨 Design Grafico\n* `arte-contemporanea` - 🆕 Arte Contemporanea\n* `arte-classica` - 🏛️ Arte Classica\n* `other` - 🎭 Altro"
                    },
                    "category_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "cover_image": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Immagine di copertina del corso (opzionale)"
                    },
                    "cover_image_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "price_eur": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$",
                        "description": "Prezzo in Euro per pagamento fiat"
                    },
                    "teocoin_price": {
                        "type": "string",
                        "readOnly": true
                    },
                    "teocoin_discount_percent": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,2})?$",
                        "description": "Percentuale sconto pagando con TeoCoin"
                    },
                    "teocoin_reward": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$",
                        "description": "TeoCoin ricompensa per completamento corso"
                    },
                    "teacher": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/User"
                            }
                        ],
                        "readOnly": true
                    },
                    "lessons": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Lesson"
                        },
                        "readOnly": true
                    },
                    "total_duration": {
                        "type": "string",
                        "readOnly": true
                    },
                    "students": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true
                    },
                    "student_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "is_enrolled": {
                        "type": "string",
                        "readOnly": true
                    },
                    "is_approved": {
                        "type": "boolean",
                        "readOnly": true
                    }
                }
            },
            "PatchedTeacherChoicePreference": {
                "type": "object",
                "description": "Serializer for teacher choice preferences",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "teacher_email": {
                        "type": "string",
                        "readOnly": true
                    },
                    "preference": {
                        "$ref": "#/components/schemas/PreferenceEnum"
                    },
                    "preference_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "minimum_teo_threshold": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "description": "Minimum TEO amount to auto-accept"
                    },
                    "email_notifications": {
                        "type": "boolean"
                    },
                    "immediate_notifications": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedTeacherDiscountDecision": {
                "type": "object",
                "description": "Serializer for teacher discount decisions",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "student_email": {
                        "type": "string",
                        "readOnly": true
                    },
                    "course_title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "course_price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "discount_percentage": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "teo_cost_display": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "teacher_bonus_display": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "discounted_price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "teacher_commission_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,2})?$",
                        "description": "Commission rate at time of request"
                    },
                    "teacher_staking_tier": {
                        "type": "string",
                        "description": "Staking tier at time of request",
                        "maxLength": 20
                    },
                    "decision": {
                        "$ref": "#/components/schemas/DecisionEnum"
                    },
                    "decision_made_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When the decision expires"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "is_expired": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "time_remaining": {
                        "type": "string",
                        "readOnly": true
                    },
                    "teacher_earnings_if_accepted": {
                        "type": "string",
                        "readOnly": true
                    },
                    "teacher_earnings_if_declined": {
                        "type": "string",
                        "readOnly": true
                    },
                    "offered_teacher_teo": {
                        "type": "string",
                        "readOnly": true
                    },
                    "final_teacher_teo": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "PreferenceEnum": {
                "enum": [
                    "always_accept",
                    "always_decline",
                    "manual",
                    "threshold_based"
                ],
                "type": "string",
                "description": "* `always_accept` - Always Accept TeoCoin\n* `always_decline` - Always Decline TeoCoin\n* `manual` - Manual Decision Required\n* `threshold_based` - Accept if TEO value > threshold"
            },
            "Register": {
                "type": "object",
                "description": "Serializer for user registration.\n\nHandles the creation of new user accounts with email verification.\nPassword is write-only for security purposes.",
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 254
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    }
                },
                "required": [
                    "email",
                    "password",
                    "role",
                    "username"
                ]
            },
            "RoleEnum": {
                "enum": [
                    "student",
                    "teacher",
                    "admin"
                ],
                "type": "string",
                "description": "* `student` - Studente\n* `teacher` - Maestro\n* `admin` - Amministratore"
            },
            "TeacherChoicePreference": {
                "type": "object",
                "description": "Serializer for teacher choice preferences",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "teacher_email": {
                        "type": "string",
                        "readOnly": true
                    },
                    "preference": {
                        "$ref": "#/components/schemas/PreferenceEnum"
                    },
                    "preference_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "minimum_teo_threshold": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "description": "Minimum TEO amount to auto-accept"
                    },
                    "email_notifications": {
                        "type": "boolean"
                    },
                    "immediate_notifications": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "preference_display",
                    "teacher_email",
                    "updated_at"
                ]
            },
            "TeacherCourse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string"
                    },
                    "price_eur": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$",
                        "description": "Prezzo in Euro per pagamento fiat"
                    },
                    "category": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CategoryEnum"
                            }
                        ],
                        "description": "Categoria del corso per facilitare la navigazione\n\n* `disegno` - ✏️ Disegno\n* `pittura-olio` - 🎨 Pittura ad Olio\n* `acquerello` - 💧 Acquerello\n* `tempera` - 🖌️ Tempera\n* `acrilico` - 🌈 Pittura Acrilica\n* `scultura` - 🗿 Scultura\n* `storia-arte` - 📚 Storia dell'Arte\n* `fotografia` - 📸 Fotografia Artistica\n* `illustrazione` - 🖊️ Illustrazione\n* `arte-digitale` - 💻 Arte Digitale\n* `ceramica` - 🏺 Ceramica e Terracotta\n* `incisione` - ⚱️ Incisione e Stampa\n* `mosaico` - 🔷 Mosaico\n* `restauro` - 🛠️ Restauro Artistico\n* `calligrafia` - ✒️ Calligrafia\n* `fumetto` - 💭 Fumetto e Graphic Novel\n* `design-grafico` - 🎨 Design Grafico\n* `arte-contemporanea` - 🆕 Arte Contemporanea\n* `arte-classica` - 🏛️ Arte Classica\n* `other` - 🎭 Altro"
                    },
                    "category_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "cover_image": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Immagine di copertina del corso (opzionale)"
                    },
                    "cover_image_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "is_approved": {
                        "type": "boolean",
                        "description": "Il corso deve essere approvato da un admin prima di essere messo in vendita."
                    },
                    "published": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "total_earnings": {
                        "type": "string",
                        "readOnly": true
                    },
                    "total_students": {
                        "type": "string",
                        "readOnly": true
                    },
                    "enrolled_students": {
                        "type": "string",
                        "readOnly": true
                    },
                    "lessons": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "category_display",
                    "cover_image_url",
                    "created_at",
                    "description",
                    "enrolled_students",
                    "id",
                    "lessons",
                    "published",
                    "status",
                    "title",
                    "total_earnings",
                    "total_students",
                    "updated_at"
                ]
            },
            "TeacherDiscountDecision": {
                "type": "object",
                "description": "Serializer for teacher discount decisions",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "student_email": {
                        "type": "string",
                        "readOnly": true
                    },
                    "course_title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "course_price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "discount_percentage": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "teo_cost_display": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "teacher_bonus_display": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "discounted_price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "teacher_commission_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,2})?$",
                        "description": "Commission rate at time of request"
                    },
                    "teacher_staking_tier": {
                        "type": "string",
                        "description": "Staking tier at time of request",
                        "maxLength": 20
                    },
                    "decision": {
                        "$ref": "#/components/schemas/DecisionEnum"
                    },
                    "decision_made_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When the decision expires"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "is_expired": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "time_remaining": {
                        "type": "string",
                        "readOnly": true
                    },
                    "teacher_earnings_if_accepted": {
                        "type": "string",
                        "readOnly": true
                    },
                    "teacher_earnings_if_declined": {
                        "type": "string",
                        "readOnly": true
                    },
                    "offered_teacher_teo": {
                        "type": "string",
                        "readOnly": true
                    },
                    "final_teacher_teo": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "course_price",
                    "course_title",
                    "created_at",
                    "discount_percentage",
                    "discounted_price",
                    "expires_at",
                    "final_teacher_teo",
                    "id",
                    "is_expired",
                    "offered_teacher_teo",
                    "student_email",
                    "teacher_bonus_display",
                    "teacher_commission_rate",
                    "teacher_earnings_if_accepted",
                    "teacher_earnings_if_declined",
                    "teacher_staking_tier",
                    "teo_cost_display",
                    "time_remaining"
                ]
            },
            "TransactionTypeEnum": {
                "enum": [
                    "mint",
                    "transfer",
                    "burn",
                    "course_purchase",
                    "course_earned",
                    "reward",
                    "exercise_reward",
                    "review_reward",
                    "discount_applied",
                    "discount_accept"
                ],
                "type": "string",
                "description": "* `mint` - Mint - Crea nuovi token\n* `transfer` - Transfer - Trasferimento tra wallet\n* `burn` - Burn - Distruzione token\n* `course_purchase` - Course Purchase - Acquisto corso\n* `course_earned` - Course Earned - Guadagno insegnante\n* `reward` - Reward - Premio per attività\n* `exercise_reward` - Exercise Reward - Premio per esercizio completato\n* `review_reward` - Review Reward - Premio per review completata\n* `discount_applied` - Discount Applied - Sconto TeoCoin applicato\n* `discount_accept` - Discount Accept - Teacher accepted TEO"
            },
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 254
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "phone": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "address": {
                        "type": "string",
                        "nullable": true
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoleEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "avatar": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Immagine di profilo (opzionale)."
                    },
                    "bio": {
                        "type": "string",
                        "nullable": true,
                        "description": "Breve biografia (opzionale)."
                    },
                    "profession": {
                        "type": "string",
                        "nullable": true,
                        "description": "Professione artistica (es. illustratore, pittore ad olio, scultore)",
                        "maxLength": 100
                    },
                    "artistic_aspirations": {
                        "type": "string",
                        "nullable": true,
                        "description": "Aspirazioni e specializzazioni artistiche"
                    },
                    "wallet_address": {
                        "type": "string",
                        "nullable": true,
                        "description": "Indirizzo wallet Ethereum/Polygon per TeoCoins",
                        "maxLength": 42
                    }
                },
                "required": [
                    "email",
                    "id",
                    "role",
                    "username"
                ]
            }
        },
        "securitySchemes": {
            "jwtAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}